import pandas as pd

data = """
HH:MM:SS   Kbps in  Kbps out
15:22:53      9.46      7.18
15:22:54     32.29     82.23
15:22:55     11.69     60.97
15:22:56     27.66     22.16
15:22:57     26.18     13.42
15:22:58      8.94      8.43
15:22:59      9.07     12.09
15:23:00      1.25      0.70
15:23:01     14.05     46.35
15:23:02      8.20      8.54
15:23:03      5.89     20.67
15:23:04    697.43  35608.25
15:23:05   1286.11  163028.8
15:23:06    666.28  93825.33
15:23:07    668.13  93747.36
15:23:08    686.42  93134.92
15:23:09    641.32  93540.90
15:23:10    636.84  93626.29
15:23:11    677.93  93672.36
15:23:12    640.17  93331.22
15:23:13    677.06  93868.92
15:23:14    642.99  93170.59
15:23:15    599.32  93680.75
15:23:16    619.51  93562.49
15:23:17    751.45  93818.51
15:23:18    602.00  93209.44
15:23:19    654.77  93533.39
15:23:20    620.38  93967.97
15:23:21    671.61  93135.64
15:23:22    678.07  93406.95
15:23:23    644.82  93618.39
15:23:24    625.65  93831.94
15:23:25    677.77  93277.14
15:23:26    682.56  93599.24
15:23:27    612.24  93548.89
15:23:28    638.03  93516.70
15:23:29    727.04  93489.86
15:23:30    653.72  93536.44
15:23:31    689.22  93563.52
15:23:32    692.60  93618.79
15:23:33    656.25  93448.09
15:23:34    663.56  93781.64
15:23:35    655.74  93300.33
15:23:36    637.12  93466.33
15:23:37    651.89  93685.05
15:23:38    675.09  93846.23
15:23:39    657.99  93257.49
15:23:40    669.71  93610.40
15:23:41    649.83  93684.85
15:23:42    629.56  93170.57
15:23:43    641.43  93604.27
15:23:44    613.93  93520.96
15:23:45    682.49  93657.79
15:23:46    629.05  93625.67
15:23:47    629.54  93617.73
15:23:48    670.31  93666.34
15:23:49    641.89  93505.70
15:23:50    602.54  93321.81
15:23:51    680.98  93425.85
15:23:52    642.51  93670.18
15:23:53    603.56  93498.30
15:23:54    636.41  93574.36
15:23:55    662.92  93519.37
15:23:56   2556.49  67931.80
15:23:57   3307.19  109070.5
15:23:58   3642.13  76714.19
15:23:59    881.73  120498.8
15:24:00    636.80  93647.29
15:24:01    565.48  93529.97
15:24:02    571.12  93228.32
15:24:03    602.60  93451.81
15:24:04    597.29  93860.82
15:24:05    587.71  93468.22
15:24:06    571.03  93394.23
15:24:07    606.35  93484.25
15:24:08    615.68  93418.04
15:24:09    576.89  93717.47
15:24:10    614.90  93345.02
15:24:11    594.74  93415.59
15:24:12    610.48  93544.13
15:24:13    520.31  93384.92
15:24:14    577.35  93602.90
15:24:15    581.06  93475.93
15:24:16    579.19  93474.76
15:24:17    639.73  93887.22
15:24:18    598.55  93138.13
15:24:19    601.81  93768.56
15:24:20    551.80  93272.29
15:24:21    539.17  93621.67
15:24:22    686.27  93352.19
15:24:23    574.77  93612.83
15:24:24    571.68  93594.44
15:24:25    525.67  93582.14
15:24:26    608.54  93267.13
15:24:27    615.15  93415.81
15:24:28    534.14  93391.48
15:24:29    564.51  93972.27
15:24:30    601.07  93165.06
15:24:31    639.27  94005.25
15:24:32    664.15  92960.82
15:24:33    552.36  94020.14
15:24:34    566.42  93245.13
15:24:35    585.73  93375.82
15:24:36    602.00  93779.36
15:24:37    610.21  93087.33
15:24:38    616.27  93669.84
15:24:39    562.98  93602.39
15:24:40    592.51  93429.78
15:24:41    551.65  93467.84
15:24:42    666.64  93668.05
15:24:43    520.17  93665.01
15:24:44    539.12  93426.52
15:24:45    537.06  93413.27
15:24:46    575.08  93632.77
15:24:47    597.45  93375.82
15:24:48    563.87  93668.31
15:24:49    582.17  93223.39
15:24:50    592.65  93607.33
15:24:51    634.27  93438.37
15:24:52    571.34  93505.09
15:24:53    571.83  93675.39
15:24:54    554.39  93394.11
15:24:55    949.03  91341.07
15:24:56   3839.55   4624.39
15:24:57   3712.26  168328.5
15:24:58   2662.42  93982.38
15:24:59   1815.05  93495.32
15:25:00   1703.92  38233.64
15:25:01   2199.91  148520.6
15:25:02    809.94  93560.70
15:25:03    585.45  93390.46
15:25:04    627.45  93596.20
15:25:05    623.06  93138.20
15:25:06    689.51  93763.47
15:25:07    532.20  93080.63
15:25:08   2684.96  93907.69
15:25:09    952.79  93285.45
15:25:10    670.55  93507.48
15:25:11    626.31  93350.53
15:25:12    656.69  93386.62
15:25:13    744.30  93606.76
15:25:14    618.54  93516.54
15:25:15    624.92  93302.06
15:25:16   4739.27  36681.81
15:25:17   3432.56   3791.80
15:25:18   4799.08   5415.54
15:25:19   4341.04   4860.73
15:25:20     46.82     49.50
15:25:21     76.42     58.89
15:25:22    120.18    151.89
15:25:23      2.50      1.40
15:25:24      8.56     43.26
15:25:25      8.97     27.85
15:25:26     11.26      9.74
15:25:27     52.84     86.12
15:25:28     28.29     51.20
15:25:29      8.33     40.70
15:25:30      2.79     17.75
15:25:31     47.03     38.54
15:25:32     36.97     22.56
15:25:33      3.01      1.92
15:25:34     12.02     41.97
15:25:35     13.70     31.64
15:25:36      0.00      0.00
15:25:37     56.40     77.49
15:25:38     10.73     11.53
15:25:39     27.71    273.40
15:25:40     29.69     41.70
15:25:41      8.97      8.24
15:25:42     32.26     36.27
15:25:43      9.71     27.98
15:25:44     14.09    259.13
15:25:45      1.25      0.70
15:25:46      1.54     18.87
15:25:47     12.96     46.21
15:25:48      8.89      8.71
15:25:49     14.79     49.30
15:25:50      9.76     24.83
15:25:51     56.56     42.76
15:25:52     22.03     12.56
15:25:53      3.20      2.11
15:25:54      9.59     39.14
15:25:55     28.89     41.94
15:25:56     13.82     11.26
15:25:57     61.93    315.65
15:25:58     15.18     34.68
15:25:59     28.24     56.12
"""


# Split the data into lines
lines = data.strip().split("\n")
header = lines[1].split()

# Create an empty list to store the data
data_list = []
# data_list.append(dict(zip(header, ["Time", "Kbps in", "Kbps out"])))

# Start from line 2 to extract the data
for line in lines[2:]:
    parts = line.split()
    data_dict = dict(zip(header, parts))
    data_list.append(data_dict)

# Create a DataFrame from the list of dictionaries
df = pd.DataFrame(data_list)

# Save the DataFrame to a CSV file
df.to_csv("CONCURRENTnetworkDataDistroMash.csv", index=False)
